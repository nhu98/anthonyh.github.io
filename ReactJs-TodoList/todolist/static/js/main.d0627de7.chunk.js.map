{"version":3,"sources":["Todo.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","data","console","log","checkDone","this","done","className","src","process","alt","width","style","cursor","title","onClick","completeTask","id","deleteTask","name","React","Component","TodoList","myTaskChangeHandler","event","setState","taskName","target","value","addTask","tasks","length","push","tasksFilter","filter","task","taskList","forEach","todoListName","type","onChange","map","index","App","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0627de7.chunk.js","sourcesContent":["import \"./Todo.css\";\nimport React from \"react\";\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(\"props of chill: \", props);\n    this.state = { data: props.data };\n    console.log(\"props of chill: \", this.state);\n  }\n\n  // completeTask = () => {\n  //   // console.log(\"Todo completete task id: \", this.state.id);\n  //   // this.setState({ done: true });\n  //   // console.log(\"Todo parent: \", this.props.id);\n  //   this.props.completeTask(this.props.data.id);\n  // };\n\n  static getDerivedStateFromProps(props, state) {\n    return { data: props.data };\n  }\n\n  render() {\n    console.log(\"render\");\n    let checkDone = \"\";\n    if (!this.state.data.done) {\n      checkDone = (\n        <img\n          src={process.env.PUBLIC_URL + \"/assets/2561353_check_circle_icon.png\"}\n          alt=\"Finish Task\"\n          width=\"25\"\n          style={{ cursor: \"pointer\" }}\n          title=\"click to finish task\"\n          onClick={() => this.props.completeTask(this.state.data.id)}\n        />\n      );\n    } else if (this.state.data.done) {\n      checkDone = (\n        <img\n          className=\"hiddenIcoin\"\n          src={process.env.PUBLIC_URL + \"/assets/2561353_check_circle_icon.png\"}\n          alt=\"Finish Task\"\n          width=\"25\"\n          style={{ cursor: \"pointer\" }}\n          title=\"click to finish task\"\n          onClick={() => this.props.completeTask(this.state.data.id)}\n        />\n      );\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"Aligned\">\n          {checkDone}\n          <img\n            src=\"./assets/2849797_trash_basket_multimedia_icon.png\"\n            alt=\"Delete Task\"\n            width=\"25\"\n            style={{ cursor: \"pointer\" }}\n            title=\"click to delete task\"\n            onClick={() => this.props.deleteTask(this.state.data.id)}\n          />\n          {/* todo\n           phan tu done= false trong ds van con dinh' gach ngang*/}\n          <span className={this.state.data.done ? \"done\" : \"\"}>\n            {this.state.data.name}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","import \"./TodoList.css\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { todoListName: props.name, taskName: \"\", tasks: [] };\n  }\n\n  myTaskChangeHandler = (event) => {\n    this.setState({ taskName: event.target.value });\n    // console.log(\"myTaskChangeHandler\", event.target.value);\n  };\n  addTask = () => {\n    console.log(\"addTask\", this.state.taskName);\n    if (this.state.taskName === \"\") {\n      return;\n    }\n    const id = this.state.tasks.length;\n    const name = this.state.taskName;\n    this.state.tasks.push({ id, name, done: false });\n    this.setState({ taskName: \"\" });\n  };\n\n  deleteTask = (id) => {\n    // console.log(\"list task\", this.state.tasks);\n    // console.log(\"delete task id: \", id);\n    const tasksFilter = this.state.tasks.filter((task) => task.id !== id);\n    console.log(\"List task after filter :\", tasksFilter);\n    this.setState({ tasks: tasksFilter });\n  };\n\n  completeTask = (id) => {\n    console.log(\"Complete Task had id :\", id);\n    const taskList = this.state.tasks;\n    taskList.forEach((task) => {\n      if (task.id === id) {\n        task.done = true;\n      }\n    });\n    console.log(\"Tasks wanna to complete: \", taskList);\n    this.setState({ tasks: taskList });\n  };\n\n  render() {\n    return (\n      <div className=\"TodoList\">\n        <header className=\"TodoList-header\">\n          <div>{this.state.todoListName}</div>\n          <div className=\"aligned\">\n            <img\n              src={\n                process.env.PUBLIC_URL + \"/assets/2561291_plus_circle_icon.png\"\n              }\n              alt=\"add Task\"\n              width=\"25\"\n              style={{ cursor: \"pointer\" }}\n              title=\"click to add task\"\n              onClick={() => this.addTask()}\n            />\n            <input\n              type=\"text\"\n              onChange={this.myTaskChangeHandler}\n              value={this.state.taskName}\n            />\n          </div>\n          <div>\n            <ul>\n              {this.state.tasks.map((value, index) => {\n                // return <li key={index}>{value}</li>\n                console.log(\"map\", value);\n                return (\n                  <Todo\n                    key={index}\n                    data={value}\n                    deleteTask={this.deleteTask}\n                    completeTask={this.completeTask}\n                  />\n                );\n              })}\n            </ul>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default TodoList;\n","import \"./App.css\";\nimport React from \"react\";\nimport TodoList from \"./TodoList\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { taskName: \"\", tasks: [] };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <table border=\"1\">\n          <thead>\n            <tr>\n              <th>Nhiem vu 1</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <TodoList name=\"Danh sach di cho\" />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}